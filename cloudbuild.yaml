steps:
- name: 'python'
  args: ['pip3','install', '-r', 'requirements.txt', '--user']

- name: 'gcr.io/cloud-builders/gcloud'
  # decrypt secrets into .env file
  entrypoint: 'bash'
  args: [ '-c', "gcloud secrets versions access latest --secret=ag-tio-consec --format='get(payload.data)' | tr '_-' '/+' | base64 -d > .env" ] 

- name: 'gcr.io/cloud-builders/gcloud'
  # extract secret_key from .env to use with --password-stdin
  entrypoint: 'bash'
  args: [ '-c', 'grep SECRET_KEY .env | cut -f2 -d= > secret_key.txt']

- name: 'gcr.io/cloud-builders/docker'
  # test writing output
  entrypoint: 'bash'
  args: ['-c', 'echo this is a build artifact > /workspace/output.txt']

- name: 'gcr.io/cloud-builders/docker'
  # login to registry.cloud.tenable.com using access_key / secret_key
  entrypoint: 'bash'
  args: [ '-c', 'docker login --username=$(grep ACCESS_KEY .env | cut -f2 -d=) --password-stdin registry.cloud.tenable.com < secret_key.txt']

- name: "gcr.io/cloud-builders/docker"
  # build and tag for tenable registry
  args: ["build", "-t", "registry.cloud.tenable.com/gcp-images/gcp-hello:latest", "."]

- name: "gcr.io/cloud-builders/docker"
  # docker push to Tenable 
  args: ["push", "registry.cloud.tenable.com/gcp-images/gcp-hello:latest"]

# images: "registry.cloud.tenable.com/gcp-hello:latest"

